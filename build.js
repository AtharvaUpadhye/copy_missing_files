(() => { var e = { 912: (e, s, r) => { const i = r(622), o = r(747); e.exports.filesList = e => { const s = ["node_modules", ".git"], r = [[], []], t = e => { o.readdirSync(e).forEach((l => { const c = i.resolve(e, l); o.lstatSync(c).isDirectory() ? s.includes(l) || t(c) : l.endsWith("mp4") && (r[0].push(l), r[1].push(c)) })) }; return t(e), r } }, 87: (e, s) => { let r = function (e, s, i, o) { if (i > o) return -1; let t = Math.floor((i + o) / 2); return e[t] === s ? t : e[t] > s ? r(e, s, i, t - 1) : r(e, s, t + 1, o) }; s.searchInSorted = r }, 730: e => { sortDictByKey = (e, s) => { dup = e.slice(), console.log(s), dup.sort(); const r = [[], []]; return dup.forEach((i => { r[0].push(i), r[1].push(s[e.indexOf(i)]) })), r }, e.exports = { sortDictByKey } }, 747: e => { "use strict"; e.exports = require("fs") }, 622: e => { "use strict"; e.exports = require("path") } }, s = {}; function r(i) { if (s[i]) return s[i].exports; var o = s[i] = { exports: {} }; return e[i](o, o.exports, r), o.exports } (() => { const e = r(87), s = r(912), o = r(730), t = r(747), l = r(622), c = Date.now(); let n = l.resolve(process.argv[2]), p = null == process.argv[4] ? l.resolve(process.argv[3]) : l.resolve("."); "win32" == process.platform && (n = n.replace(/\\/g, "/"), p = p.replace(/\\/g, "/")), console.log(n), copiedFilesDir = l.resolve(p, "copied just now"), t.existsSync(copiedFilesDir) || t.mkdirSync(copiedFilesDir), destDirFiles = null == process.argv[4] ? s.filesList(p) : JSON.parse(t.readFileSync(process.argv[4], "utf-8")); var a = o.sortDictByKey(destDirFiles.fileNames, destDirFiles.filePaths); for (console.log(a[0]), srcDirFiles = s.filesList(n), console.log(srcDirFiles[1]), console.log(destDirFiles.filePaths), i = 0; i < srcDirFiles[0].length; i++)index = e.searchInSorted(a[0], srcDirFiles[0][i], 0, a[0].length - 1), -1 == index ? t.lstatSync(srcDirFiles[1][i]).isDirectory() || (console.log("NOT found -> \t\t" + srcDirFiles[0][i]), t.copyFileSync(srcDirFiles[1][i], l.resolve(p, "copied just now", srcDirFiles[0][i]), t.constants.COPYFILE_FICLONE)) : console.log("found ! -> \t\t" + a[0][index]); console.log(`Total time taken: ${Date.now() - c}ms`) })() })();
